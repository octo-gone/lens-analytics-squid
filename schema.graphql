type Profile @entity {
    id: ID!
    profileId: BigInt! @index
    address: String! @index
    handle: String! @index
    imageUri: String!
    posts: [Post!] @derivedFrom(field: "creator")
    createdAt: DateTime! @index
    updatedAt: DateTime! @index
}

type Post @entity {
    id: ID!
    pubId: BigInt! @index
    profileId: BigInt! @index
    creator: Profile! @index
    contentUri: String!
    timestamp: DateTime! @index
}

type Mirror @entity {
    id: ID!
    profileId: BigInt! @index
    pubId: BigInt! @index
    profileIdPointed: BigInt! @index
    pubIdPointed: BigInt! @index
    timestamp: DateTime! @index
}

type Comment @entity {
    id: ID!
    profileId: BigInt! @index
    pubId: BigInt! @index
    contentUri: String!
    profileIdPointed: BigInt! @index
    pubIdPointed: BigInt! @index
    timestamp: DateTime! @index
}

type Follow @entity {
    id: ID!
    follower: String! @index
    profileIds: JSON!
    timestamp: DateTime! @index
}

type Collect @entity {
    id: ID!
    collector: String! @index
    profileId: BigInt! @index
    pubId: BigInt! @index
    rootProfileId: BigInt! @index
    rootPubId: BigInt! @index
    timestamp: DateTime! @index
}